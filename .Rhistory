plot(mapIUT)
points(df_light$longitude, df_light$latitude, col = "red", cex = 6)
plot(mapIUT)
points(df_light$longitude, df_light$latitude, col = "red", cex = 60)
plot(mapIUT)
points(df_light$longitude, df_light$latitude, col = "red", cex = 60,add=TRUE)
plot(mapIUT)
points(df_light$latitude,df_light$longitude,  col = "red", cex = 60)
# téléchargement de la carte
mapIUT <- openmap(upperLeft = c(52.34580, 13.11632),
lowerRight = c(52.65167, 13.74346),
type = "stamen-watercolor")
# affichage de la carte
plot(mapIUT)
points(df_light$latitude,df_light$longitude,  col = "red", cex = 60)
library(rworldmap)
df.coords <- projectMercator(df_light$latitude,df_light$longitude)
str(df.coords)
head(df.coords)
df.coords$x
df_light <- cbind(df_light,projectMercator(df_light$latitude,df_light$longitude))
points(df_light$x,df_light$y,  col = "red", cex = 60)
# téléchargement de la carte
mapIUT <- openmap(upperLeft = c(52.34580, 13.11632),
lowerRight = c(52.65167, 13.74346),
type = "stamen-watercolor")
# affichage de la carte
plot(mapIUT)
df_light <- cbind(df_light,projectMercator(df_light$latitude,df_light$longitude))
points(df_light$x,df_light$y,  col = "red", cex = 60)
df_wedding<-df_light %>% filter(grepl('Mitte',neighbourhood_group))
df_light<-read.csv('data/listings_light.csv')
df_wedding<-df_light %>% filter(grepl('Mitte',neighbourhood_group))
df_wedding<-df_light %>% filter(grepl('Mitte',neighbourhood_group))
# téléchargement de la carte
mapIUT <- openmap(upperLeft = c(52.34580, 13.11632),
lowerRight = c(52.65167, 13.74346),
type = "stamen-watercolor")
# affichage de la carte
plot(mapIUT)
df_wedding <- cbind(df_wedding,projectMercator(df_wedding$latitude,df_wedding$longitude))
points(df_wedding$x,df_wedding$y,  col = "red", cex = 60)
points(df_wedding$x,df_wedding$y,  col = "red", cex = .6)
plot(mapIUT)
points(df_wedding$x,df_wedding$y,  col = "red", cex = .6)
plot(mapBerlin)
df_wedding<-df_light %>% filter(grepl('Mitte',neighbourhood_group))
# téléchargement de la carte
mapBerlin <- openmap(upperLeft = c(52.34580, 13.11632),
lowerRight = c(52.65167, 13.74346),
type = "stamen-watercolor")
# affichage de la carte
df_wedding <- cbind(df_wedding,projectMercator(df_wedding$latitude,df_wedding$longitude))
plot(mapBerlin)
points(df_wedding$x,df_wedding$y,  col = "red", cex = .6)
plot(mapBerlin)
points(df_wedding$x,df_wedding$y,  col = "blue", alpha=0.2,cex = .2)
df_wedding<-df_light %>% filter(grepl('Mitte',neighbourhood_group))
range_lat<-range(df_wedding$latitude)
range_lon<-range(df_wedding$longitude)
# téléchargement de la carte
mapBerlin <- openmap(upperLeft = c(range_lat[1], range_lon[1]),
lowerRight = c(range_lat[2], range_lon[2]),
type = "stamen-watercolor")
# affichage de la carte
df_wedding <- cbind(df_wedding,projectMercator(df_wedding$latitude,df_wedding$longitude))
plot(mapBerlin)
points(df_wedding$x,df_wedding$y,  col = "blue", alpha=0.2,cex = .2)
plot(mapBerlin)
points(df_wedding$x,df_wedding$y,  col= gray(df_wedding$price/0.0001), alpha=0.2,cex = .2)
prico<- df_wedding$price/0.0001
table(prico)
hist(prico)
range(df_wedding$price)
plot(mapBerlin)
points(df_wedding$x,df_wedding$y,  col= gray(df_wedding$price/2000), alpha=0.2,cex = .2)
plot(mapBerlin)
points(df_wedding$x,df_wedding$y,  col= gray(df_wedding$price/2000),cex = .2)
plot(mapBerlin)
points(df_wedding$x,df_wedding$y,  col= gray(df_wedding$price/3000),cex = .2)
plot(mapBerlin)
points(df_wedding$x,df_wedding$y,  col= gray(df_wedding$price/1000),cex = .2)
col <- findColours(classIntervals(
df_wedding$price, 10, style="quantile"),
smoothColors(color_hex_min,3,'white',2,color_hex_max))
library(OpenStreetMap)
library(leaflet)
library(rgdal)
library(dplyr)
library(htmlwidgets)
library(RColorBrewer)
library(classInt)
library(plotrix)
col <- findColours(classIntervals(
df_wedding$price, 10, style="quantile"),
smoothColors(color_hex_min,3,'white',2,color_hex_max))
color_hex_min='#404040'
color_hex_max='#ca0020'
col <- findColours(classIntervals(
df_wedding$price, 10, style="quantile"),
smoothColors(color_hex_min,3,'white',2,color_hex_max))
plot(mapBerlin)
points(df_wedding$x,df_wedding$y,  col= col,cex = .2)
color_hex_min='#404040'
color_hex_max='#ca0020'
col <- findColours(classIntervals(
df_wedding$price, 10, style="quantile"),
smoothColors(color_hex_min,3,'white',2,color_hex_max))
plot(mapBerlin)
points(df_wedding$x,df_wedding$y,  col= col,cex = .6)
color_hex_min='#404040'
color_hex_max='#ca0020'
col <- findColours(classIntervals(
df_wedding$price, 10, style="quantile"),
smoothColors(color_hex_min,3,'white',2,color_hex_max))
plot(mapBerlin)
points(df_wedding$x,df_wedding$y,  col= col,cex = .6,bg=col,lw=0)
color_hex_min='#404040'
color_hex_max='#ca0020'
col <- findColours(classIntervals(
df_wedding$price, 10, style="quantile"),
smoothColors(color_hex_min,3,'white',2,color_hex_max))
plot(mapBerlin)
points(df_wedding$x,df_wedding$y,  col= col,cex = .6,bg=col,lw=1)
color_hex_min='#404040'
color_hex_max='#ca0020'
col <- findColours(classIntervals(
df_wedding$price, 10, style="quantile"),
smoothColors(color_hex_min,3,'white',2,color_hex_max))
plot(mapBerlin)
points(df_wedding$x,df_wedding$y,  col= col,bg=col,lw=1)
color_hex_min='#404040'
color_hex_max='#ca0020'
col <- findColours(classIntervals(
df_wedding$price, 10, style="quantile"),
smoothColors(color_hex_min,3,'white',2,color_hex_max))
plot(mapBerlin)
points(df_wedding$x,df_wedding$y,  col= col,bg=col,lw=.1)
color_hex_min='#404040'
color_hex_max='#ca0020'
col <- findColours(classIntervals(
df_wedding$price, 10, style="quantile"),
smoothColors(color_hex_min,3,'white',2,color_hex_max))
plot(mapBerlin)
points(df_wedding$x,df_wedding$y,  col= col,lw=.1)
color_hex_min='#404040'
color_hex_max='#ca0020'
col <- findColours(classIntervals(
df_wedding$price, 10, style="quantile"),
smoothColors(color_hex_min,3,'white',2,color_hex_max))
plot(mapBerlin)
points(df_wedding$x,df_wedding$y,  col= col)
color_hex_min='#404040'
color_hex_max='#ca0020'
col <- findColours(classIntervals(
df_wedding$price, 10, style="quantile"),
smoothColors(color_hex_min,3,'white',2,color_hex_max))
plot(mapBerlin)
points(df_wedding$x,df_wedding$y,  col= col,pch = 21)
color_hex_min='#404040'
color_hex_max='#ca0020'
col <- findColours(classIntervals(
df_wedding$price, 10, style="quantile"),
smoothColors(color_hex_min,3,'white',2,color_hex_max))
plot(mapBerlin)
points(df_wedding$x,df_wedding$y,  col= col,pch = 22)
color_hex_min='#404040'
color_hex_max='#ca0020'
col <- findColours(classIntervals(
df_wedding$price, 10, style="quantile"),
smoothColors(color_hex_min,3,'white',2,color_hex_max))
plot(mapBerlin)
points(df_wedding$x,df_wedding$y,  col= col,pch = 19)
color_hex_min='#404040'
color_hex_max='#ca0020'
col <- findColours(classIntervals(
df_wedding$price, 10, style="quantile"),
smoothColors(color_hex_min,3,'white',2,color_hex_max))
plot(mapBerlin)
points(df_wedding$x,df_wedding$y,  col= col,pch = 19,alpha=0.2)
color_hex_min='#404040'
color_hex_max='#ca0020'
col <- findColours(classIntervals(
df_wedding$price, 10, style="quantile"),
smoothColors(color_hex_min,3,'white',2,color_hex_max))
plot(mapBerlin)
points(df_wedding$x,df_wedding$y,  col= alpha(col, 0.5),pch = 19,alpha=0.2)
color_hex_min='#404040'
color_hex_max='#ca0020'
col <- findColours(classIntervals(
df_wedding$price, 10, style="quantile"),
smoothColors(color_hex_min,3,'white',2,color_hex_max))
plot(mapBerlin)
points(df_wedding$x,df_wedding$y,  col= alpha(col, 0.5),pch = 19,cx=.3)
color_hex_min='#3399FF'
color_hex_max='#003366'
col <- findColours(classIntervals(
df_wedding$price, 10, style="quantile"),
smoothColors(color_hex_min,3,'white',2,color_hex_max))
plot(mapBerlin)
points(df_wedding$x,df_wedding$y,  col= alpha(col, 0.5),pch = 19,cx=.3)
color_hex_min='#3399FF'
color_hex_max='#003366'
col <- findColours(classIntervals(
df_wedding$price, 10, style="quantile"),
smoothColors(color_hex_min,3,'white',2,color_hex_max))
plot(mapBerlin)
points(df_wedding$x,df_wedding$y,  col= alpha(col, 0.5),pch = 19,cx=.1)
color_hex_min='#3399FF'
color_hex_max='#003366'
col <- findColours(classIntervals(
df_wedding$price, 10, style="quantile"),
smoothColors(color_hex_min,3,'white',2,color_hex_max))
plot(mapBerlin)
points(df_wedding$x,df_wedding$y,  col= alpha(col, 0.5),pch = 19,cx=.1)
df_wedding<-df_light %>% filter(grepl('Mitte',neighbourhood_group))
range_lat<-range(df_wedding$latitude)
range_lon<-range(df_wedding$longitude)
# téléchargement de la carte
mapBerlin <- openmap(upperLeft = c(range_lat[1], range_lon[1]),
lowerRight = c(range_lat[2], range_lon[2]),
type = "osm")
# affichage de la carte
df_wedding <- cbind(df_wedding,projectMercator(df_wedding$latitude,df_wedding$longitude))
color_hex_min='#3399FF'
color_hex_max='#003366'
col <- findColours(classIntervals(
df_wedding$price, 10, style="quantile"),
smoothColors(color_hex_min,3,'white',2,color_hex_max))
plot(mapBerlin)
points(df_wedding$x,df_wedding$y,  col= alpha(col, 0.5),pch = 19,cx=.1)
df_wedding<-df_light %>% filter(grepl('Mitte',neighbourhood_group))
range_lat<-range(df_wedding$latitude)
range_lon<-range(df_wedding$longitude)
# téléchargement de la carte
mapBerlin <- openmap(upperLeft = c(range_lat[1], range_lon[1]),
lowerRight = c(range_lat[2], range_lon[2]),
type = "stamen-toner")
# affichage de la carte
df_wedding <- cbind(df_wedding,projectMercator(df_wedding$latitude,df_wedding$longitude))
color_hex_min='#3399FF'
color_hex_max='#003366'
col <- findColours(classIntervals(
df_wedding$price, 10, style="quantile"),
smoothColors(color_hex_min,3,'white',2,color_hex_max))
plot(mapBerlin)
points(df_wedding$x,df_wedding$y,  col= alpha(col, 0.5),pch = 19,cx=.1)
color_hex_min='#3399FF'
color_hex_max='#ff5a5f'
col <- findColours(classIntervals(
df_wedding$price, 10, style="quantile"),
smoothColors('grey',8,color_hex_max))
plot(mapBerlin)
points(df_wedding$x,df_wedding$y,  col= alpha(col, 0.5),pch = 19,cx=.1)
color_hex_min='#3399FF'
color_hex_max='#ff5a5f'
col <- findColours(classIntervals(
df_wedding$price, 10, style="quantile"),
smoothColors('grey',8,color_hex_max))
plot(mapBerlin)+   main = "Eruptions of Old Faithful
points(df_wedding$x,df_wedding$y,  col= alpha(col, 0.5),pch = 19,cx=.1)
color_hex_min='#3399FF'
color_hex_max='#ff5a5f'
col <- findColours(classIntervals(
df_wedding$price, 10, style="quantile"),
smoothColors('grey',8,color_hex_max))
plot(mapBerlin)+   main = "Eruptions of Old Faithful""
points(df_wedding$x,df_wedding$y,  col= alpha(col, 0.5),pch = 19,cx=.1)
color_hex_min='#3399FF'
color_hex_max='#ff5a5f'
col <- findColours(classIntervals(
df_wedding$price, 10, style="quantile"),
smoothColors('grey',8,color_hex_max))
plot(mapBerlin)+   main = "Eruptions of Old Faithful"
color_hex_min='#3399FF'
color_hex_max='#ff5a5f'
col <- findColours(classIntervals(
df_wedding$price, 10, style="quantile"),
smoothColors('grey',8,color_hex_max))
plot(mapBerlin, main = "Eruptions of Old Faithful")
points(df_wedding$x,df_wedding$y,  col= alpha(col, 0.5),pch = 19,cx=.1)
color_hex_min='#3399FF'
color_hex_max='#ff5a5f'
col <- findColours(classIntervals(
df_wedding$price, 10, style="quantile"),
smoothColors('grey',8,color_hex_max))
plot(mapBerlin)
title( main = "New Orleans area: \n residents 65 and over by ZIP")
points(df_wedding$x,df_wedding$y,  col= alpha(col, 0.5),pch = 19,cx=.1)
color_hex_min='#3399FF'
color_hex_max='#ff5a5f'
col <- findColours(classIntervals(
df_wedding$price, 10, style="quantile"),
smoothColors('grey',8,color_hex_max))
plot(mapBerlin)
title( main = "New Orleans area: \n residents 65 and over by ZIP",outer=TRUE)
points(df_wedding$x,df_wedding$y,  col= alpha(col, 0.5),pch = 19,cx=.1)
color_hex_min='#3399FF'
color_hex_max='#ff5a5f'
col <- findColours(classIntervals(
df_wedding$price, 10, style="quantile"),
smoothColors('grey',8,color_hex_max))
plot(mapBerlin)
title( main = "New Orleans area: \n residents 65 and over by ZIP",outer=FALSE)
points(df_wedding$x,df_wedding$y,  col= alpha(col, 0.5),pch = 19,cx=.1)
color_hex_min='#3399FF'
color_hex_max='#ff5a5f'
col <- findColours(classIntervals(
df_wedding$price, 10, style="quantile"),
smoothColors('grey',8,color_hex_max))
plot(mapBerlin)
title( main = "New Orleans area: \n residents 65 and over by ZIP",line = 2)
points(df_wedding$x,df_wedding$y,  col= alpha(col, 0.5),pch = 19,cx=.1)
color_hex_min='#3399FF'
color_hex_max='#ff5a5f'
col <- findColours(classIntervals(
df_wedding$price, 10, style="quantile"),
smoothColors('grey',8,color_hex_max))
plot(mapBerlin,main = "New Orleans area: \n residents 65 and over by ZIP")
points(df_wedding$x,df_wedding$y,  col= alpha(col, 0.5),pch = 19,cx=.1)
color_hex_min='#3399FF'
color_hex_max='#ff5a5f'
col <- findColours(classIntervals(
df_wedding$price, 10, style="quantile"),
smoothColors('grey',8,color_hex_max))
plot(mapBerlin,main = "New Orleans area")
points(df_wedding$x,df_wedding$y,  col= alpha(col, 0.5),pch = 19,cx=.1)
color_hex_min='#3399FF'
color_hex_max='#ff5a5f'
col <- findColours(classIntervals(
df_wedding$price, 3, style="quantile"),
smoothColors('grey',1,color_hex_max))
plot(mapBerlin,main = "New Orleans area")
points(df_wedding$x,df_wedding$y,  col= alpha(col, 0.5),pch = 19,cx=.1)
color_hex_min='#ff5a5f'
color_hex_max='red'
col <- findColours(classIntervals(
df_wedding$price, 3, style="quantile"),
smoothColors(color_hex_min,1,color_hex_max))
plot(mapBerlin,main = "New Orleans area")
points(df_wedding$x,df_wedding$y,  col= alpha(col, 0.5),pch = 19,cx=.1)
color_hex_min='#ff5a5f'
color_hex_max='9BCBAE'
col <- findColours(classIntervals(
df_wedding$price, 3, style="quantile"),
smoothColors(color_hex_min,1,color_hex_max))
color_hex_min='#ff5a5f'
color_hex_max='#9BCBAE'
col <- findColours(classIntervals(
df_wedding$price, 3, style="quantile"),
smoothColors(color_hex_min,1,color_hex_max))
plot(mapBerlin,main = "New Orleans area")
points(df_wedding$x,df_wedding$y,  col= alpha(col, 0.5),pch = 19,cx=.1)
color_hex_min='#ff5a5f'
color_hex_max='#9BCBAE'
col <- findColours(classIntervals(
df_wedding$price, 3, style="quantile"),
smoothColors(color_hex_min,1,color_hex_max))
plot(mapBerlin,main = "New Orleans area")
points(df_wedding$x,df_wedding$y,  col= alpha(col, 1),pch = 191)
color_hex_min='#ff5a5f'
color_hex_max='#9BCBAE'
col <- findColours(classIntervals(
df_wedding$price, 3, style="quantile"),
smoothColors(color_hex_min,1,color_hex_max))
plot(mapBerlin,main = "New Orleans area")
points(df_wedding$x,df_wedding$y,  col= alpha(col, 1),pch = 19)
get_openstreetmap(bbox = c(left = range_lon[1], bottom = range_lat[1], right =
range_lon[1], top = range_lat[2]), scale = 606250, format = c("png", "jpeg",
"svg", "pdf", "ps"), messaging = FALSE, urlonly = FALSE,
filename = "ggmapTemp", color = c("color", "bw"), ...)
install.packages("ggmap")
install.packages("ggmap")
get_openstreetmap(bbox = c(left = range_lon[1], bottom = range_lat[1], right =
range_lon[1], top = range_lat[2]), scale = 606250, format = c("png", "jpeg",
"svg", "pdf", "ps"), messaging = FALSE, urlonly = FALSE,
filename = "ggmapTemp", color = c("color", "bw"), ...)
library(ggmap)
get_openstreetmap(bbox = c(left = range_lon[1], bottom = range_lat[1], right =
range_lon[1], top = range_lat[2]), scale = 606250, format = c("png", "jpeg",
"svg", "pdf", "ps"), messaging = FALSE, urlonly = FALSE,
filename = "ggmapTemp", color = c("color", "bw"), ...)
get_openstreetmap(bbox = c(left = range_lon[1], bottom = range_lat[1], right =
range_lon[1], top = range_lat[2]), scale = 606250, format = c("png", "jpeg",
"svg", "pdf", "ps"), messaging = FALSE, urlonly = FALSE,
filename = "ggmapTemp", color = c("color", "bw"))
get_openstreetmap(bbox = c(left = range_lon[1], bottom = range_lat[1], right =
range_lon[2], top = range_lat[2]), scale = 606250, format = c("png", "jpeg",
"svg", "pdf", "ps"), messaging = FALSE, urlonly = FALSE,
filename = "ggmapTemp", color = c("color", "bw"))
get_openstreetmap(bbox = c(left = range_lon[1], bottom = range_lat[1], right =
range_lon[2], top = range_lat[2]), scale = 606250, format = c("png", "jpeg",
"svg"), messaging = FALSE, urlonly = FALSE,
filename = "ggmapTemp", color = c("color", "bw"))
get_openstreetmap(bbox = c(left = range_lon[1], bottom = range_lat[1], right =
range_lon[2], top = range_lat[2]), scale = 606250, format = c("png", "jpeg",
"svg")), messaging = FALSE, urlonly = FALSE,
get_openstreetmap(bbox = c(left = range_lon[1], bottom = range_lat[1], right =
range_lon[2], top = range_lat[2]), scale = 606250, format = c("png", "jpeg",
"svg", "pdf", "ps"), messaging = FALSE, urlonly = FALSE,
filename = "ggmapTemp", color = c("color", "bw"))
get_openstreetmap(bbox = c(left = range_lon[1], bottom = range_lat[1], right =
range_lon[2], top = range_lat[2]), format = c("png", "jpeg",
"svg", "pdf", "ps"), messaging = FALSE, urlonly = FALSE,
filename = "ggmapTemp", color = c("color", "bw"))
ggmap_berlin<- get_openstreetmap(bbox = c(left = range_lon[1], bottom = range_lat[1], right =
range_lon[2]), top = range_lat[2]), format = c("png", "jpeg",
ggmap_berlin<- get_openstreetmap(bbox = c(left = range_lon[1], bottom = range_lat[1], right =
range_lon[2], top = range_lat[2]), format = c("png", "jpeg",
"svg", "pdf", "ps"), messaging = FALSE, urlonly = FALSE,
filename = "ggmapTemp", color = c("color", "bw"))
ggmap_berlin<- get_openstreetmap(bbox = c(left = -95.80204, bottom = 29.38048, right =
-94.92313, top = 30.14344), format = c("png", "jpeg",
"svg", "pdf", "ps"), messaging = FALSE, urlonly = FALSE,
filename = "ggmapTemp", color = c("color", "bw"))
ggmap_berlin<- get_openstreetmap(bbox = c(left = -95.80204, bottom = 29.38048, right =
-94.92313, top = 30.14344), scale = 606250, format = c("png", "jpeg",
"svg", "pdf", "ps"), messaging = FALSE, urlonly = FALSE,
filename = "ggmapTemp", color = c("color", "bw"))
ggmap_berlin<- get_openstreetmap(bbox = c(left = range_lon[1], bottom = range_lat[1], right =
range_lon[2], top = range_lat[2]), format = c("jpeg"), messaging = FALSE, urlonly = FALSE,
filename = "ggmapTemp", color = c("color", "bw"))
ggmap_berlin<- get_openstreetmap(bbox = c(left = range_lon[1], bottom = range_lat[1], right =
range_lon[2], top = range_lat[2]), format = c("png"), messaging = FALSE, urlonly = FALSE,
filename = "ggmapTemp", color = c("color", "bw"))
ggmap_berlin<- get_openstreetmap(bbox = c(left = range_lon[1], bottom = range_lat[1], right =
range_lon[2], top = range_lat[2]))
ggmap_berlin<- get_map(bbox = c(left = range_lon[1], bottom = range_lat[1], right =
range_lon[2], top = range_lat[2]),source="google")
ggmap_berlin<- get_map(location = c(left = range_lon[1], bottom = range_lat[1], right =
range_lon[2], top = range_lat[2]),source="google")
ggmap_berlin
ggmap_berlin+ geom_point(aes(x=longitude, y=latitude), data=df_wedding, col="orange")
ggmap_berlin<- get_map(location = c(left = range_lon[1], bottom = range_lat[1], right =
range_lon[2], top = range_lat[2]),source="google")
ggmap_berlin+ geom_point(aes(x=x, y=y), data=df_wedding, col="orange")
ggmap(ggmap_berlin)+ geom_point(aes(x=x, y=y), data=df_wedding, col="orange")
ggmap(ggmap_berlin)+ geom_point(aes(x=latitude, y=longitude), data=df_wedding, col="orange")
ggmap(ggmap_berlin)+ geom_point(aes(x=longitude, y=latitude), data=df_wedding, col="orange")
ggmap(ggmap_berlin)+ geom_point(aes(x=longitude, y=latitude), data=df_wedding, col=col)
ggmap_berlin<- get_map(location = c(left = range_lon[1], bottom = range_lat[1], right =
range_lon[2], top = range_lat[2]),source="stamen")
ggmap_berlin<- get_map(location = c(left = range_lon[1], bottom = range_lat[1], right =
range_lon[2], top = range_lat[2]),source="google",color="bw")
ggmap(ggmap_berlin)+ geom_point(aes(x=longitude, y=latitude), data=df_wedding, col=col)
ggmap(ggmap_berlin)+ geom_point(aes(x=longitude, y=latitude), data=df_wedding, col=col)
ggmap(ggmap_berlin)+ geom_point(aes(x=longitude, y=latitude), data=df_wedding, col=col)+ggtitle("May 2017")
color_hex_ax='#ff5a5f'
color_hex_min='#9BCBAE'
col <- findColours(classIntervals(
df_wedding$price, 3, style="quantile"),
smoothColors(color_hex_min,1,color_hex_max))
library(OpenStreetMap)
library(leaflet)
library(rgdal)
library(dplyr)
library(htmlwidgets)
library(RColorBrewer)
library(classInt)
library(plotrix)
library(ggmap)
df_light<-read.csv('data/listings_light.csv')
df_light_2015<-read.csv('data/listings_oct_2015.csv')
pal <- colorQuantile(
palette = "Reds",
domain = df_light$number_of_reviews,reverse = FALSE)
m<-leaflet(data = df_light) %>% addTiles() %>%
addCircleMarkers(~longitude, ~latitude, popup = ~as.character(name), label = ~as.character(name),stroke = FALSE, fillOpacity = 0.8,color = ~pal(number_of_reviews),radius=2)
m
df_wedding<-df_light %>% filter(grepl('Mitte',neighbourhood_group))
range_lat<-range(df_wedding$latitude)
range_lon<-range(df_wedding$longitude)
# téléchargement de la carte
mapBerlin <- openmap(upperLeft = c(range_lat[1], range_lon[1]),
lowerRight = c(range_lat[2], range_lon[2]),
type = "stamen-toner")
# affichage de la carte
df_wedding <- cbind(df_wedding,projectMercator(df_wedding$latitude,df_wedding$longitude))
color_hex_ax='#ff5a5f'
color_hex_min ='#9BCBAE'
col <- findColours(classIntervals(
df_wedding$price, 3, style="quantile"),
smoothColors(color_hex_min,1,color_hex_max))
plot(mapBerlin,main = "New Orleans area")
points(df_wedding$x,df_wedding$y,  col= alpha(col, 1),pch = 19)
ggmap_berlin<- get_map(location = c(left = range_lon[1], bottom = range_lat[1], right =
range_lon[2], top = range_lat[2]),source="google",color="bw")
ggmap(ggmap_berlin)+ geom_point(aes(x=longitude, y=latitude), data=df_wedding, col=col)+ggtitle("May 2017")
color_hex_max='#ff5a5f'
color_hex_min ='#9BCBAE'
col <- findColours(classIntervals(
df_wedding$price, 3, style="quantile"),
smoothColors(color_hex_min,1,color_hex_max))
plot(mapBerlin,main = "New Orleans area")
points(df_wedding$x,df_wedding$y,  col= alpha(col, 1),pch = 19)
color_hex_max='#ff5a5f'
color_hex_min ='#9BCBAE'
col <- findColours(classIntervals(
df_wedding$price, 3, style="quantile"),
smoothColors(color_hex_min,1,color_hex_max))
plot(mapBerlin,main = "New Orleans area")
points(df_wedding$x,df_wedding$y,  col= alpha(col, 1),pch = 19)
color_hex_max='#ff5a5f'
color_hex_min ='#9BCBAE'
col <- findColours(classIntervals(
df_wedding$price, 5, style="quantile"),
smoothColors(color_hex_min,3,color_hex_max))
plot(mapBerlin,main = "New Orleans area")
points(df_wedding$x,df_wedding$y,  col= alpha(col, 1),pch = 19)
ggmap_berlin<- get_map(location = c(left = range_lon[1], bottom = range_lat[1], right =
range_lon[2], top = range_lat[2]),source="google",color="bw")
ggmap(ggmap_berlin)+ geom_point(aes(x=longitude, y=latitude), data=df_wedding, col=col)+ggtitle("May 2017")
